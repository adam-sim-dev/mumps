name: oneapi-linux

env:
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_MKL_COMPONENTS: "intel-oneapi-mkl intel-oneapi-mkl-devel"
  LINUX_MPI_COMPONENTS: "intel-oneapi-mpi intel-oneapi-mpi-devel"
# https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/build_all.yml
  CTEST_NO_TESTS_ACTION: error
  CC: icx
  CXX: icpx
  FC: ifx
  CMAKE_BUILD_TYPE: Release
  CMAKE_BUILD_PARALLEL_LEVEL: 4
  CMAKE_INSTALL_PREFIX: ~/libs
  CMAKE_PREFIX_PATH: ~/libs

on:
  push:
    paths:
      - "**.c"
      - "**.f"
      - "**.F"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/oneapi-linux.yml"
      - "!scripts/*"

jobs:

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    name: parallel=${{ matrix.parallel }} int64=${{ matrix.int64 }}

    strategy:
      matrix:
        int64: [true, false]
        parallel: [true, false]

    steps:
    - uses: actions/checkout@v4

    - name: cache install oneAPI
      id: cache-install
      uses: actions/cache@v4
      with:
        path: |
          /opt/intel/oneapi
        key: install-apt

    - name: non-cache install oneAPI
      if: steps.cache-install.outputs.cache-hit != 'true'
      timeout-minutes: 10
      run: |
        sh -c .github/workflows/oneapi_setup_apt_repo_linux.sh
        sudo apt install ${{ env.LINUX_CPP_COMPONENTS }} ${{ env.LINUX_FORTRAN_COMPONENTS }} ${{ env.LINUX_MKL_COMPONENTS }} ${{ env.LINUX_MPI_COMPONENTS }}

    - name: Setup Intel oneAPI environment
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: CMake Configure
      run: >-
        cmake --preset default
        -DMUMPS_intsize64=${{ matrix.int64 }}
        -DMUMPS_parallel:BOOL=${{ matrix.parallel }}

    - name: print config log CMake
      run: cat build/CMakeFiles/CMakeConfigureLog.yaml

    - name: CMake build
      run: cmake --build --preset default

    - name: CMake Test
      if: ${{ matrix.int64 == 'false' }}
      run: ctest --preset default

    - name: install package
      run: cmake --install build

    - name: configure example
      run: >-
        cmake
        -S example
        -B example/build

    - name: print config log
      if: ${{ failure() }}
      run: cat example/build/CMakeFiles/CMakeConfigureLog.yaml

    - name: build example
      run: cmake --build example/build

    - name: test example
      if: ${{ matrix.int64 == 'false' }}
      run: ctest --test-dir example/build -V


    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: sh -c .github/workflows/oneapi_cache_exclude_linux.sh
